
stages:
  - initial_report
  - build
  - publish_build
  - test
  - final_report


variables:
  GITHUB_REPO_API_URL: "https://api.github.com/repos/ipbus/ipbus-software"
  IPBUS_DOCKER_REGISTRY: "gitlab-registry.cern.ch/ipbus/ipbus-docker"
  OUTPUT_ROOT_DIR: "/eos/user/i/ipbusci/sw-gitlab-ci"
  OUTPUT_ROOT_URL: "http://www.cern.ch/ipbus/sw/ci"



.job_template: &github_commit_status_jobTemplate
  image: cern/cc7-base:20170113
  tags:
    - docker
  except:
    - tags
  dependencies: []

github_commit_status:start:
  <<: *github_commit_status_jobTemplate
  stage: initial_report
  when: always
  script:
    - "curl -H \"Authorization: token ${GITHUB_STATUS_TOKEN}\" --data '{\"state\" : \"pending\", \"target_url\" : \"'\"${CI_PROJECT_URL}\"'/pipelines/'\"${CI_PIPELINE_ID}\"'\", \"description\" : \"CI pipeline has started\", \"context\" : \"gitlab-ci\"}' ${GITHUB_REPO_API_URL}/statuses/${CI_BUILD_REF}"

github_commit_status:end:failure:
  <<: *github_commit_status_jobTemplate
  stage: final_report
  when: on_failure
  script:
    - "curl -H \"Authorization: token ${GITHUB_STATUS_TOKEN}\" --data '{\"state\" : \"failure\", \"target_url\" : \"'\"${CI_PROJECT_URL}\"'/pipelines/'\"${CI_PIPELINE_ID}\"'\", \"description\" : \"Jobs have failed in CI pipeline\", \"context\" : \"gitlab-ci\"}' ${GITHUB_REPO_API_URL}/statuses/${CI_BUILD_REF}"

github_commit_status:end:success:
  <<: *github_commit_status_jobTemplate
  stage: final_report
  when: on_success
  script:
    - "curl -H \"Authorization: token ${GITHUB_STATUS_TOKEN}\" --data '{\"state\" : \"success\", \"target_url\" : \"'\"${CI_PROJECT_URL}\"'/pipelines/'\"${CI_PIPELINE_ID}\"'\", \"description\" : \"CI pipeline completed successfully!\", \"context\" : \"gitlab-ci\"}' ${GITHUB_REPO_API_URL}/statuses/${CI_BUILD_REF}"



doxygen_job:
  stage: build
  image: ${IPBUS_DOCKER_REGISTRY}/ipbus-sw-doxygen:2019-01-08__doxygen1.8.14
  tags:
    - docker
  script:
    - env | grep -v PASSWORD | grep -v TOKEN
    - ./scripts/doxygen/api_uhal.sh "(${CI_COMMIT_TAG:-commit ${CI_COMMIT_SHA}})"
    - ls -al /tmp
    - mkdir -p ${CI_PROJECT_DIR}/ci_build_results/
    - mv /tmp/api_uhal ${CI_PROJECT_DIR}/ci_build_results/api_uhal
  artifacts:
    paths:
      - ci_build_results/api_uhal
    when: always
    expire_in: 1 day



.job_template: &build_rpm_yumrepo_jobTemplate
  stage: build
  tags:
    - docker
  before_script:
    - export REPO_DIR=${CI_PROJECT_DIR}/ci_build_results/repos/${OUTPUT_REPO_SUBDIR}
    - if [ -z "${CI_COMMIT_TAG}" ]; then export PACKAGE_RELEASE_SUFFIX=.autobuild_$(git log --pretty=format:'%h' -1) ; fi
  script:
    - env | grep -v PASSWORD | grep -v TOKEN
    - cd .. && sudo rm -rf ipbus-software___ && mv ipbus-software ipbus-software___ && mkdir ipbus-software && cd ipbus-software___
    - make -k Set=all
    - make -k Set=all PACKAGE_RELEASE_SUFFIX=${PACKAGE_RELEASE_SUFFIX} rpm
    - mkdir -p ${REPO_DIR} 
    - make -C uhal/log generate_files
    - git diff --exit-code
    - cp `find . -iname "*.rpm"` ${REPO_DIR} && cp ${YUMGROUPS_FILE} ${REPO_DIR}/yumgroups.xml
    - ls ${REPO_DIR}
    - createrepo -vg yumgroups.xml ${REPO_DIR}
  artifacts:
    paths:
      - ci_build_results/repos/${OUTPUT_REPO_SUBDIR}
    when: always
    expire_in: 1 day

build:slc6:
  <<: *build_rpm_yumrepo_jobTemplate
  image: ${IPBUS_DOCKER_REGISTRY}/ipbus-sw-dev-slc6:2019-01-08
  variables:
    YUMGROUPS_FILE: "ci/yumgroups-slc6.xml"
    OUTPUT_REPO_SUBDIR: "slc6_x86_64"

build:centos7:
  <<: *build_rpm_yumrepo_jobTemplate
  image: ${IPBUS_DOCKER_REGISTRY}/ipbus-sw-dev-cc7:2019-01-08__boost1.53.0_pugixml1.8
  variables:
    YUMGROUPS_FILE: "ci/yumgroups-centos7.xml"
    OUTPUT_REPO_SUBDIR: "centos7_x86_64"



.job_template: &simple_build_jobTemplate
  stage: build
  tags:
    - docker
  script:
    - env | grep -v PASSWORD | grep -v TOKEN
    - make -k Set=all
  artifacts:
    untracked: true
    when: always
    expire_in: 1 day

build:fedora30-python2:
  <<: *simple_build_jobTemplate
  image: ${IPBUS_DOCKER_REGISTRY}/ipbus-sw-dev-fedora30-python2:2019-10-12__erlang21.3_gcc9.2.1_boost1.69.0_pugixml1.9
build:fedora30-python3:
  <<: *simple_build_jobTemplate
  image: ${IPBUS_DOCKER_REGISTRY}/ipbus-sw-dev-fedora30-python3:2019-10-12__erlang21.3_gcc9.2.1_boost1.69.0_pugixml1.9
build:ubuntu16:
  <<: *simple_build_jobTemplate
  image: ${IPBUS_DOCKER_REGISTRY}/ipbus-sw-dev-ubuntu16:2019-01-08__erlang18.3_gcc5.3.1_boost1.58.0_pugixml1.7



publish_build_job:
  stage: publish_build
  image: gitlab-registry.cern.ch/ci-tools/ci-web-deployer:latest
  variables:
    CI_OUTPUT_DIR: "ci_build_results/"
  before_script:
    - yum -y install openssh-clients
    - export EOS_PATH=${OUTPUT_ROOT_DIR}/commits/${CI_COMMIT_TAG:-${CI_COMMIT_SHA}}/pipeline${CI_PIPELINE_ID}
    - if [ -n "${CI_COMMIT_TAG}" ]; then export EOS_PATH=${EOS_PATH/commits/tags} ; fi
  script:
    - env | grep -v PASSWORD | grep -v TOKEN | sort
    - echo "${EOS_ACCOUNT_PASSWORD}" | kinit ${EOS_ACCOUNT_USERNAME}@CERN.CH
    - klist
    - ssh -F ${CI_PROJECT_DIR}/ci/ssh_config ${EOS_ACCOUNT_USERNAME}@lxplus "rm -rf ${EOS_PATH} && mkdir -p ${EOS_PATH}"
    - ssh -F ${CI_PROJECT_DIR}/ci/ssh_config ${EOS_ACCOUNT_USERNAME}@lxplus "ln -sfnv ${EOS_PATH} `dirname ${EOS_PATH}`/latest"
    - kdestroy
    - ls -lt ${CI_OUTPUT_DIR}
    - deploy-eos




.job_template: &rpmInstall_test_jobTemplate
  stage: test
  dependencies: []
  before_script:
    - export OUTPUT_PIPELINE_URL=${OUTPUT_ROOT_URL}/commits/${CI_COMMIT_TAG:-${CI_COMMIT_SHA}}/pipeline${CI_PIPELINE_ID}
    - if [ -n "${CI_COMMIT_TAG}" ]; then export OUTPUT_PIPELINE_URL=${OUTPUT_PIPELINE_URL/commits/tags} ; fi
    - sudo cp ci/ipbus-sw-ci.repo /etc/yum.repos.d/ipbus-sw-ci.repo
    - sudo sed -i -re "s|^baseurl=.*|baseurl=${OUTPUT_PIPELINE_URL}/repos/${REPO_URL_OS_SUBDIR}|g" /etc/yum.repos.d/ipbus-sw-ci.repo
    - cat /etc/yum.repos.d/ipbus-sw-ci.repo
    - sudo rpm --rebuilddb && sudo yum clean all 
    - sudo yum -y groupinstall ipbus-sw
    - sudo yum -y install 'cactuscore-uhal-*-debuginfo'
    - rpm -qa | grep cactus | sort

.job_template: &slc6_test_jobTemplate
  <<: *rpmInstall_test_jobTemplate
  image: ${IPBUS_DOCKER_REGISTRY}/ipbus-sw-test-slc6:2019-01-08
  variables:
    REPO_URL_OS_SUBDIR: slc6_x86_64
    UHAL_ENABLE_IPBUS_PCIE: ""
    UHAL_GUI_DEPENDENCIES: "wxPython numpy"
    VALGRIND_ARGS: "--suppressions=/opt/cactus/etc/uhal/tests/valgrind/uhal_tests_slc6.supp"

.job_template: &centos7_test_jobTemplate
  <<: *rpmInstall_test_jobTemplate
  image: ${IPBUS_DOCKER_REGISTRY}/ipbus-sw-test-cc7:2019-01-08
  variables:
    REPO_URL_OS_SUBDIR: centos7_x86_64
    UHAL_ENABLE_IPBUS_PCIE: ""
    TEST_SUITE_CONTROLHUB_PATH_ARGUMENT: "-p /opt/cactus/bin"
    UHAL_GUI_DEPENDENCIES: "wxPython numpy"
    VALGRIND_ARGS: "--suppressions=/opt/cactus/etc/uhal/tests/valgrind/uhal_tests.supp"


.job_template: &simpleInstall_test_jobTemplate
  stage: test
  before_script:
    - sudo make -k Set=all install
    - ls -al /opt/cactus /opt/cactus/*
    - export TEST_SUITE_CONTROLHUB_PATH_ARGUMENT="-p /opt/cactus/bin"

.job_template: &fedora30_python2_test_jobTemplate
  <<: *simpleInstall_test_jobTemplate
  image: ${IPBUS_DOCKER_REGISTRY}/ipbus-sw-dev-fedora30-python2:2019-10-12__erlang21.3_gcc9.2.1_boost1.69.0_pugixml1.9
  dependencies:
    - build:fedora30-python2
  variables:
    UHAL_ENABLE_IPBUS_PCIE: ""
    UHAL_GUI_DEPENDENCIES: "wxPython numpy"
    VALGRIND_ARGS: "--suppressions=/opt/cactus/etc/uhal/tests/valgrind/uhal_tests.supp"

.job_template: &fedora30_python3_test_jobTemplate
  <<: *simpleInstall_test_jobTemplate
  image: ${IPBUS_DOCKER_REGISTRY}/ipbus-sw-dev-fedora30-python3:2019-10-12__erlang21.3_gcc9.2.1_boost1.69.0_pugixml1.9
  dependencies:
    - build:fedora30-python3
  variables:
    UHAL_ENABLE_IPBUS_PCIE: ""
    UHAL_GUI_DEPENDENCIES: python3-wxpython4
    VALGRIND_ARGS: "--suppressions=/opt/cactus/etc/uhal/tests/valgrind/uhal_tests.supp"

.job_template: &ubuntu16_test_jobTemplate
  <<: *simpleInstall_test_jobTemplate
  image: ${IPBUS_DOCKER_REGISTRY}/ipbus-sw-dev-ubuntu16:2019-01-08__erlang18.3_gcc5.3.1_boost1.58.0_pugixml1.7
  dependencies:
    - build:ubuntu16
  variables:
    UHAL_ENABLE_IPBUS_PCIE: ""
    VALGRIND_ARGS: "--suppressions=/opt/cactus/etc/uhal/tests/valgrind/uhal_tests.supp"



.job_template: &test_core_jobTemplate
  tags:
    - docker
    - docker-cap-net-admin
  script:
    - export PATH=/opt/cactus/bin:/opt/cactus/bin/uhal/tests:$PATH
    - export LD_LIBRARY_PATH=/opt/cactus/lib:$LD_LIBRARY_PATH
    - env | grep -v PASSWORD | grep -v TOKEN
    - /opt/cactus/bin/controlhub_status || service controlhub start || /opt/cactus/bin/controlhub_start
    - run_uhal_tests.exe -c file:///opt/cactus/etc/uhal/tests/dummy_connections.xml --log_level=test_suite
    - service controlhub stop || /opt/cactus/bin/controlhub_stop
    - uhal_test_suite.py -v -s "2.0 controlhub - light packet loss" ${TEST_SUITE_CONTROLHUB_PATH_ARGUMENT}
    - valgrind --error-exitcode=1 --tool=memcheck --leak-check=full --run-libc-freeres=no ${VALGRIND_ARGS} run_uhal_tests.exe -c file:///opt/cactus/etc/uhal/tests/dummy_connections.xml --t 10000 --quick --run_test=ipbusudp* --log_level=test_suite

.job_template: &test_python_jobTemplate
  tags:
    - docker
  script:
    - export PATH=/opt/cactus/bin/uhal/tests:$PATH
    - export LD_LIBRARY_PATH=/opt/cactus/lib:$LD_LIBRARY_PATH
    - env | grep -v PASSWORD | grep -v TOKEN
    - uhal_test_suite.py -v -s pycohal

.job_template: &test_gui_jobTemplate
  tags:
    - docker
  script:
    - 'if [ -x "$(command -v yum)" ]; then sudo yum -y install ${UHAL_GUI_DEPENDENCIES} ; else sudo apt-get update && sudo apt-get -y install python-wx* ; fi'
    - export PATH=/opt/cactus/bin/uhal/tests:$PATH
    - export LD_LIBRARY_PATH=/opt/cactus/lib:$LD_LIBRARY_PATH
    - env | grep -v PASSWORD | grep -v TOKEN
    - uhal_test_suite.py -v -s gui

.job_template: &test_tools_jobTemplate
  tags:
    - docker
  script:
    - export PATH=/opt/cactus/bin/uhal/tests:/opt/cactus/bin/uhal/tools:$PATH
    - export LD_LIBRARY_PATH=/opt/cactus/lib:$LD_LIBRARY_PATH
    - env | grep -v PASSWORD | grep -v TOKEN
    - uhal_test_suite.py -v -s tools

.job_template: &test_controlhub_service_jobTemplate
  tags:
    - docker
  script:
    - env | grep -v PASSWORD | grep -v TOKEN
    - /sbin/service controlhub stop
    - 'for i in `seq 1 50`; do /sbin/service controlhub start; if [ "$?" != "0" ]; then echo "ERROR IN STARTING CONTROLHUB"; fi; /sbin/service controlhub status; if [ "$?" != "0" ]; then echo "ERROR: CONTROLHUB SHOULD HAVE ALREADY STARTED"; fi; /sbin/service controlhub stop; done'

.job_template: &test_controlhub_plainScripts_jobTemplate
  tags:
    - docker
  script:
    - env | grep -v PASSWORD | grep -v TOKEN
    - /opt/cactus/bin/controlhub_stop || true
    - 'for i in `seq 1 50`; do /opt/cactus/bin/controlhub_start; if [ "$?" != "0" ]; then echo "ERROR IN STARTING CONTROLHUB"; fi; /opt/cactus/bin/controlhub_status; if [ "$?" != "0" ]; then echo "ERROR: CONTROLHUB SHOULD HAVE ALREADY STARTED"; fi; /opt/cactus/bin/controlhub_stop; done'


test_core:slc6:
  <<: *slc6_test_jobTemplate
  <<: *test_core_jobTemplate

test_python:slc6:
  <<: *slc6_test_jobTemplate
  <<: *test_python_jobTemplate

test_gui:slc6:
  <<: *slc6_test_jobTemplate
  <<: *test_gui_jobTemplate

test_tools:slc6:
  <<: *slc6_test_jobTemplate
  <<: *test_tools_jobTemplate

test_controlhub:slc6:
  <<: *slc6_test_jobTemplate
  <<: *test_controlhub_service_jobTemplate


test_core:centos7:
  <<: *centos7_test_jobTemplate
  <<: *test_core_jobTemplate

test_python:centos7:
  <<: *centos7_test_jobTemplate
  <<: *test_python_jobTemplate

test_gui:centos7:
  <<: *centos7_test_jobTemplate
  <<: *test_gui_jobTemplate

test_tools:centos7:
  <<: *centos7_test_jobTemplate
  <<: *test_tools_jobTemplate

test_controlhub:centos7:
  <<: *centos7_test_jobTemplate
  <<: *test_controlhub_plainScripts_jobTemplate


test_core:fedora30-python2:
  <<: *fedora30_python2_test_jobTemplate
  <<: *test_core_jobTemplate

test_python:fedora30-python2:
  <<: *fedora30_python2_test_jobTemplate
  <<: *test_python_jobTemplate

test_gui:fedora30-python2:
  <<: *fedora30_python2_test_jobTemplate
  <<: *test_gui_jobTemplate

test_tools:fedora30-python2:
  <<: *fedora30_python2_test_jobTemplate
  <<: *test_tools_jobTemplate

test_controlhub:fedora30-python2:
  <<: *fedora30_python2_test_jobTemplate
  <<: *test_controlhub_plainScripts_jobTemplate


test_core:fedora30-python3:
  <<: *fedora30_python3_test_jobTemplate
  <<: *test_core_jobTemplate

test_python:fedora30-python3:
  <<: *fedora30_python3_test_jobTemplate
  <<: *test_python_jobTemplate

test_gui:fedora30-python3:
  <<: *fedora30_python3_test_jobTemplate
  <<: *test_gui_jobTemplate

test_tools:fedora30-python3:
  <<: *fedora30_python3_test_jobTemplate
  <<: *test_tools_jobTemplate

test_controlhub:fedora30-python3:
  <<: *fedora30_python3_test_jobTemplate
  <<: *test_controlhub_plainScripts_jobTemplate


test_core:ubuntu16:
  <<: *ubuntu16_test_jobTemplate
  <<: *test_core_jobTemplate

test_python:ubuntu16:
  <<: *ubuntu16_test_jobTemplate
  <<: *test_python_jobTemplate

test_gui:ubuntu16:
  <<: *ubuntu16_test_jobTemplate
  <<: *test_gui_jobTemplate

test_tools:ubuntu16:
  <<: *ubuntu16_test_jobTemplate
  <<: *test_tools_jobTemplate

test_controlhub:ubuntu16:
  <<: *ubuntu16_test_jobTemplate
  <<: *test_controlhub_plainScripts_jobTemplate
